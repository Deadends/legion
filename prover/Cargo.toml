[package]
name = "legion-prover"
version = "0.1.0"
edition = "2021"

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(feature, values("post-quantum", "nova", "webauthn", "http-server", "rocksdb-storage", "hsm", "cloud-aws", "cloud-azure", "enterprise", "wasm"))'] }

[dependencies]
# Core ZK dependencies (stable 0.3, single-threaded WASM)
halo2_proofs = { version = "0.3", default-features = false }
halo2_gadgets = { version = "0.3", default-features = false }
pasta_curves = { version = "0.5", default-features = false }
ff = { version = "0.13", default-features = false }
rand_core = "0.6"
rand = "0.8"

# Cryptographic dependencies (WASM-compatible)
blake3 = "1.5"
argon2 = { version = "0.5", default-features = false, features = ["alloc", "password-hash"] }
getrandom = { version = "0.2", features = ["js"] }

crypto_constants = { path = "../crypto_constants" }

# WASM compatibility
web-time = "0.2"
once_cell = "1.19"
hashbrown = "0.14"
subtle = "2.5"

# Serialization and utilities
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
hex = "0.4"
zeroize = "1.7"
bincode = "1.3"
postcard = { version = "1.0", features = ["alloc"] }
indexmap = "2.2"

# Native-only dependencies (not compiled for WASM)
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
chacha20poly1305 = "0.10"
ed25519-dalek = "2.1"
sha2 = "0.10"
base64 = "0.21"
url = "2.5"
uuid = { version = "1.6", features = ["v4", "serde"] }
webauthn-rs = { version = "0.5", features = ["danger-allow-state-serialisation"], optional = true }
webauthn-rs-proto = { version = "0.5", optional = true }
zstd = { version = "0.13", optional = true }
rocksdb = { version = "0.24", optional = true }
pkcs11 = { version = "0.5", optional = true }
aws-sdk-kms = { version = "1.0", optional = true }
azure_security_keyvault = { version = "0.20", optional = true }
raw-cpuid = { version = "10.7", optional = true }
get_if_addrs = { version = "0.5", optional = true }
tokio = { version = "1.0", features = ["full"], optional = true }
rayon = { version = "1.8", optional = true }
redis = { version = "0.24", features = ["tokio-comp"], optional = true }
actix-web = { version = "4.5", optional = true }
actix-cors = { version = "0.7", optional = true }
actix-files = { version = "0.6", optional = true }
tracing = { version = "0.1", optional = true }
ml-kem = { version = "0.2", optional = true }
ml-dsa = { version = "0.1.0-rc.0", optional = true }
x25519-dalek = { version = "2.0", optional = true }
sha3 = { version = "0.10", optional = true }
nova-snark = { version = "0.32", optional = true }
bellpepper-core = "0.4"
neptune = { version = "13.0", optional = true }
typenum = { version = "1.17", optional = true }

[features]
default = ["native", "rocksdb-storage", "webauthn", "http-server", "redis"]
native = ["rayon", "tokio", "tracing", "raw-cpuid", "get_if_addrs", "redis", "zstd"]
webauthn = ["webauthn-rs", "webauthn-rs-proto", "tokio"]
http-server = ["actix-web", "actix-cors", "actix-files", "tokio"]
rocksdb-storage = ["rocksdb", "zstd"]
post-quantum = ["ml-dsa", "ml-kem", "x25519-dalek", "sha3"]  # Enable post-quantum crypto
nova = ["nova-snark", "neptune", "typenum"]  # Enable Nova recursive proofs

# Enterprise security (verified crates)
hsm = ["pkcs11"]                      # Hardware Security Modules
cloud-aws = ["aws-sdk-kms"]            # AWS Key Management
cloud-azure = ["azure_security_keyvault"] # Azure Key Vault
enterprise = ["hsm", "cloud-aws"]      # Production enterprise

# WASM support with multithreading (PSE halo2 0.4)
wasm = []

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
js-sys = "0.3"
web-sys = "0.3"

[dev-dependencies]
criterion = "0.5"
proptest = "1.4"

[[bin]]
name = "generate_keys"
path = "bin/generate_keys.rs"

[[bin]]
name = "run_server"
path = "bin/run_server.rs"
required-features = ["http-server", "webauthn"]

# Increase stack size for k=20 proof generation
[profile.release]
opt-level = 3
lto = true

